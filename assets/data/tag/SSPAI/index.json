{"hash":"8103612fff5ef0c89ce79e17d3acf7f030a00018","data":{"tag":{"title":"SSPAI","belongsTo":{"edges":[{"node":{"title":"Windows平台下的少数派新写稿流程","path":"/2020/06/02/writting-for-sspai-on-windows/","date":"2. June 2020","timeToRead":1,"description":"谈及写作，不少的用户都是使用 Mac 平台配合多样的 App 完成从写稿到发布的一条龙服务","content":"<p>谈及写作，不少的用户都是使用 Mac 平台配合多样的 App 完成从写稿到发布的一条龙服务。但是在 Windows 平台上，往往需要很多手动的过程。比如，在少数派平台上，官方提供了专用的接口给 MWeb App 完成从写稿、插图、发布的完善服务，但是 MWeb App 仅在 Mac 平台上提供，Windows 用户常常因为插图图床问题困扰。</p>\n<p>最近，随着两大写作好伴侣 App 的更新，这一情况得以改善。PicGo 迎来了 v2.0 版本的大更新，剥离了核心功能同时支持 CLI 调用和 API 调用。Typora 集成了 PicGo 并提供一键上传图片服务。如果需要更详细的资料，请看这两篇文章：</p>\n<p><a href=\"https://sspai.com/post/52527\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">图床「神器」PicGo v2.0更新，插件系统终于来了</a></p>\n<p><a href=\"https://sspai.com/post/59128\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Typora 支持自定义图片上传服务了</a></p>\n<p>配合上述两大神器，是否有方法能够改善少数派平台上的写作流程，下面我就来谈谈我的方案。</p>\n<h2 id=\"typora-之功能增强\"><a href=\"#typora-%E4%B9%8B%E5%8A%9F%E8%83%BD%E5%A2%9E%E5%BC%BA\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Typora 之功能增强</h2>\n<p>首先，从 Typora 官网上能够下载 Win / Linux / OSX 对应平台的安装文件并正确安装。</p>\n<p>然后，我们需要启用图片上传功能。点击 File -> Preferences -> Image，在 Image Upload Setting 那栏，选择 PicGo-Core (command line) ，然后点击 Download and Upgrade，即可完成安装。</p>\n<p><img src=\"https://wsine.cn-gd.ufileos.com/image/628cb7601505f1aaf9d736a4f59f68a6.png\" alt=\"enhance\"></p>\n<h2 id=\"picgo-之少数派插件\"><a href=\"#picgo-%E4%B9%8B%E5%B0%91%E6%95%B0%E6%B4%BE%E6%8F%92%E4%BB%B6\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>PicGo 之少数派插件</h2>\n<p>得益于 PicGo 的插件系统，我们可以为少数派平台编写插件，快捷完成图片上传到少数派的服务器。那么，如何安装少数派插件？</p>\n<p>步骤一</p>\n<p>首先我们打开 PicGo 配置文件所在的目录，你可以点击上图的 Open Config File 按钮，或者手动打开对应平台的文件夹。</p>\n<p>Windows 平台位于<code class=\"language-text\">C:\\Users\\&lt;your username&gt;\\.picgo\\</code></p>\n<p>Linux 和 OSX 平台位于`~/.picgo/<code class=\"language-text\"></code></p>\n<p>然后，克隆或下载<a href=\"https://github.com/Wsine/picgo-plugin-sspai\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github.com/Wsine/picgo-plugin-sspai</a>仓库到该文件夹中，注意如果从网页端下载，解压后去除多余的分支名，这很重要。</p>\n<p>步骤二</p>\n<p>在 PicGo 配置文件夹下创建<code class=\"language-text\">node_modules</code>文件夹，并在里面创建同名快捷方式/软链接，指向刚才下载的仓库文件夹。</p>\n<p>步骤三</p>\n<p>编辑`package.json<code class=\"language-text\"></code>文件，修改里面的依赖项。</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"picgo-plugin-sspai\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"file:picgo-plugin-sspai\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>步骤四</p>\n<p>创建`package-lock.json<code class=\"language-text\"></code>，内容填充如下：</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"picgo-plugins\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"requires\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"lockfileVersion\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"picgo-plugin-sspai\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"file:picgo-plugin-sspai\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>验证</p>\n<p>最终配置文件夹中的目录结构如应如下图所示</p>\n<pre class=\"language-text\"><code class=\"language-text\">~/.picgo &gt; tree\n.\n├── config.json\n├── node_modules\n│   └── picgo-plugin-sspai &lt;soft link&gt;\n├── package.json\n├── package-lock.json\n├── picgo.log\n└── picgo-plugin-sspai\n    ├── index.js\n    ├── License\n    ├── md5.min.js\n    ├── package.json\n    └── README.md</code></pre>\n<h2 id=\"配置个人信息\"><a href=\"#%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>配置个人信息</h2>\n<p>打开少数派官网，登陆自己的账号，然后按F12打开开发者模式，找到 Console 选项卡，输入</p>\n<p>`document.cookie.split('; sspai_cross_token=').pop().split(';').shift()<code class=\"language-text\"></code></p>\n<p>该命令会返回一串字符串，记住该字符串，并重新在 Typora 中打开 PicGo 的配置文件，替换下面样例的 token 占位符，保存</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"picBed\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"current\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sspai\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"uploader\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sspai\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"transformer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"base64\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sspai\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"cross_token\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;replace here>\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"picgoPlugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"picgo-plugin-sspai\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>好了，至此为止，你已完成了全部的配置，那么来看看效果如何吧。</p>\n<h2 id=\"样例效果\"><a href=\"#%E6%A0%B7%E4%BE%8B%E6%95%88%E6%9E%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>样例效果</h2>\n<p>我们就以本文作为目标图片展示一下该写作流程的优化吧，通过菜单栏的 Format -> Image -> Upload All Local Images 能够一键上传该文章下面的全部图片，也可以通过右击图片的方式单张图片上传</p>\n<p><img src=\"https://wsine.cn-gd.ufileos.com/image/4472f6471191c61072d1e54de3f941d9.gif\" alt=\"example\"></p>\n<p>最后，打开少数派网站的编辑器，复制全文富文本格式进去，即可完成发布流程。</p>\n<h2 id=\"后记\"><a href=\"#%E5%90%8E%E8%AE%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>后记</h2>\n<p>该插件的开发仅仅是为了方便用户在少数派平台上写作而创作。图床，一直是流量消耗的大户，目前少数派的图床仅能在 sspai.com 域名下显示，也即启用的防盗链技术，如有别的用途的用户就不用折腾啦。</p>\n<p>等后续的 Typora 更新了发布功能，我会再来优化该流程。那么，希望这个插件能帮得到大家。</p>\n"}}]}}},"context":{}}