{"hash":"8103612fff5ef0c89ce79e17d3acf7f030a00018","data":{"tag":{"title":"Terminal","belongsTo":{"edges":[{"node":{"title":"Microsoft Terminal 颜值在线的终端模拟器","path":"/2019/12/09/beautiful-microsoft-terminal/","date":"9. December 2019","timeToRead":1,"description":"最后一块拼图，Microsoft Terminal能够很好地用于日常工作中了","content":"<p>在 Microsoft Build 2019 的大会上，微软给我们带来了一款全新设计的终端模拟器 Microsoft Terminal. 虽然过度好看的宣传片和实际的效果有着巨大的落差，但是也不影响它在 Windows 阵营里取得最高的颜值称号。</p>\n<p><img src=\"http://wsine.cn-gd.ufileos.com/image/1746B559BC9685F1E4D9BFFF9F5F9EAC.png\" alt=\"terminal\"></p>\n<p>从 Preview v0.2 版本开始我就试用了这款工具，到今天的 Preview v0.6 版本最后关键的问题修复后我才想说来跟大家分享一下这个工具。</p>\n<h2 id=\"安装-terminal\"><a href=\"#%E5%AE%89%E8%A3%85-terminal\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>安装 Terminal</h2>\n<p>Microsoft Terminal （下称 Terminal） 明确要求了系统版本至少需要 “Windows 10 version 18362” 或以上才能使用。</p>\n<p>而现在的安装方法也很简单，从 Microsoft Store 里面搜索 “Microsoft Terminal” 就可以直接安装和卸载了。</p>\n<p>但是到目前为止，Terminal 还是处于一个 Preview 的阶段，功能上来说不会囊括所有的用户的期望，如果想要有自己期望的功能，可以在官方的开源仓库的 <a href=\"https://github.com/microsoft/terminal/issues\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github issue</a> 上发 Feature Request 哟~</p>\n<h2 id=\"全新配置管理方式\"><a href=\"#%E5%85%A8%E6%96%B0%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E6%96%B9%E5%BC%8F\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>全新配置管理方式</h2>\n<p>Terminal 采用了 JSON 文件作为它的配置文件，这就意味着你可以将整个配置文件备份，然后在别的地方下载下来快速使用，十分的方便。</p>\n<p>实际使我眼前一亮的点是，当我用 Sublime 修改该配置文件保存的时候，已经打开了的 Terminal 的样式能实时发生改变，这大大提高了用户调整配置的便捷程度，而很多工具要做到这点都是将设置界面做成软件的一部分才能实现的，这点给 Terminal 大大的加分。</p>\n<p>由于是 JSON 纯文本配置文件，总是有可能出现手抖或者配置出错的问题，这时候保存配置文件会被提示文件哪里的配置有问题，而该次的保存不会生效，实际调试样式还是十分方便的。</p>\n<p><img src=\"http://wsine.cn-gd.ufileos.com/image/52104FB432B5BCF495FA7E7C056DBA6C.gif\" alt=\"vim\"></p>\n<h2 id=\"less-is-more-的配置项\"><a href=\"#less-is-more-%E7%9A%84%E9%85%8D%E7%BD%AE%E9%A1%B9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Less is More 的配置项</h2>\n<p>Terminal 提供的配置项不多，但我觉得 98% 的人也只需要修改到这些配置项就足够了，下面来跟大家陈列一下它提供的配置项吧（我只挑重点的来展示）：</p>\n<ul>\n<li>defaultProfile：默认启动的方案，可以为 CMD，PowerShell，Azure 等</li>\n<li>keybindings：快捷键映射</li>\n<li>acrylic：透明度</li>\n<li>background：背景颜色或者背景图片 <del>动漫女神</del></li>\n<li>colorScheme：配色方案，可以自定义配色</li>\n<li>commandline：默认启动的程序，一般为 cmd.exe 等</li>\n<li>cursorColor：光标颜色</li>\n<li>cursorShape：光标形状</li>\n<li>fontFace：字体方案</li>\n<li>fontSize：字体大小</li>\n<li>icon：该方案的代表图标</li>\n<li>name：该方案的名称</li>\n<li>padding：外边距</li>\n<li>historySize：保留的历史输出大小</li>\n</ul>\n<p>一般情况下，当你调整好了显示的字体和大小，调整背景和透明度，还有配色方案，基本上就把一个终端模拟器的外观给定义好了。</p>\n<p>由于是 JSON 配置文件，文件里面也不能像以前的方式一样给出选项，微软将一份配置文件说明放在了仓库中 => <a href=\"https://github.com/microsoft/terminal/blob/master/doc/cascadia/SettingsSchema.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Settings Schema</a> . 但是却没有在配置文件里面提供链接，我觉得这点还是需要改进的。</p>\n<h2 id=\"功能的最后一块拼图\"><a href=\"#%E5%8A%9F%E8%83%BD%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E6%8B%BC%E5%9B%BE\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>功能的最后一块拼图</h2>\n<p>谈及终端模拟器，一般情况下我会从一些特定的功能去考察它是否功能完备，以及它的加分点有哪些</p>\n<h3 id=\"gpu加速\"><a href=\"#gpu%E5%8A%A0%E9%80%9F\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GPU加速</h3>\n<p>这个就属于新时代的终端模拟器的代表功能了，之前在 Manjaro 下面使用 Alacritty 终端模拟器时才体会到在GPU加速的这一功能。在大量的文本打印的时候，得益于GPU的加速，丝毫没有那种播放PPT的卡顿感，这个对于长时间在终端下工作的我来说还是十分舒服的。</p>\n<p><img src=\"http://wsine.cn-gd.ufileos.com/image/CC87571D29A2461C0502CF5A3C9268A9.gif\" alt=\"vim\"></p>\n<h3 id=\"多标签\"><a href=\"#%E5%A4%9A%E6%A0%87%E7%AD%BE\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>多标签</h3>\n<p>诚然，很多的终端模拟器都自带了多标签，比如 xshell，mobaxterm 和 cmder 等。前两者在工作用途上是收费的，后者总是占用了太多的 Linux 快捷键。之前我不得不使用 CMD 代替它们（发现意外的好用），现在 Terminal 来将 CMD 缺失的多标签功能给补齐了。</p>\n<h3 id=\"emoji支持\"><a href=\"#emoji%E6%94%AF%E6%8C%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Emoji支持</h3>\n<p>虽然微软平台的Emoji真的很丑，但是有总比没有好不是嘛，我还是很喜欢在Git commit里面加点emoji让它好看一点的。</p>\n<p><img src=\"http://wsine.cn-gd.ufileos.com/image/E56D8ABFB6EA3F8AF3782EC3B0DBFF0B.png\" alt=\"vim\"></p>\n<h3 id=\"ncurses的支持\"><a href=\"#ncurses%E7%9A%84%E6%94%AF%E6%8C%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>NCURSES的支持</h3>\n<p>对于重度使用终端的人来说，基本上离不开两个重要的工具，文本编辑器（Vim / Emacs）和终端复用器（Tmux / Screen）。而它们的底层，其实都是由 ncurses 来提供支持的。这个库可以让你的终端除了不断打印出新的东西，还能后退擦除一些东西，从而造成屏幕不断刷新的效果。</p>\n<p>通过我两周以来的实际体验，在我的日常使用中完全没有问题，因此才会想推荐给大家。</p>\n<p><img src=\"http://wsine.cn-gd.ufileos.com/image/63A4C2739333EFDD11711E7F9D791BA8.png\" alt=\"vim\"></p>\n<p><img src=\"http://wsine.cn-gd.ufileos.com/image/C85D32FC99D632208A9B029AAD6E2FB3.png\" alt=\"tmux\"></p>\n<h3 id=\"复制与粘贴\"><a href=\"#%E5%A4%8D%E5%88%B6%E4%B8%8E%E7%B2%98%E8%B4%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>复制与粘贴</h3>\n<p>这个就是我指的最后的一块拼图。在 v0.6 版本之前，Terminal 的复制粘贴功能一直有很大的问题。在 Github issue 中搜索 “copy / paste” 等关键字就可以知道。开发团队为了兼容微软长期以来的 Ctrl + C 的复制快捷键做了大量的工作。</p>\n<p>v0.6 版本以前，复制多段文字的时候，在别的地方粘贴总是会出现超长的一行，比如<code class=\"language-text\">a\\nb</code>可能会被粘贴成<code class=\"language-text\">a \\space*555 b</code>的情况，十分影响正常的工作，可惜我已经展示不了了。之前总是需要借助 tmux + http 才能绕过这个问题。现在这个恼人的问题终于被修复了，也就是说可以被大家广泛使用了。</p>\n<h3 id=\"基础的功能\"><a href=\"#%E5%9F%BA%E7%A1%80%E7%9A%84%E5%8A%9F%E8%83%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>基础的功能</h3>\n<p>Terminal 本身还支持 xterm-256 color ，UTF-8 和 unicode 编码，这些我认为都是必要的功能，这里就不细说了。</p>\n<h2 id=\"我的使用分享\"><a href=\"#%E6%88%91%E7%9A%84%E4%BD%BF%E7%94%A8%E5%88%86%E4%BA%AB\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>我的使用分享</h2>\n<p>我最近使用的是微软为开发者打造的一款字体 Cascadia，开源仓库在这里 => <a href=\"https://github.com/microsoft/cascadia-code/releases\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cascadia Code</a> . 我很喜欢它，得益于对 unicode 编码的支持，在GPU加速的情况下，它总能给我很多很好看的小惊喜，比如<code class=\"language-text\">=&gt;</code>会被渲染成一个完整的箭头，并且跟随进度条移动。更多的就等你们使用发掘啦。</p>\n<p>我用的是里面默认的 \"One Half Dark\" 配色，我觉得很好看，搭配 70% 的透明度和 5 pixel 的外边距，整体效果很不错。</p>\n<p><img src=\"http://wsine.cn-gd.ufileos.com/image/8480A1CD36C62A350D33E5F09904EDAC.png\" alt=\"configuration\"></p>\n<p>最后放上我的配置图，剩下的就大家去尝试一下吧~</p>\n"}}]}}},"context":{}}