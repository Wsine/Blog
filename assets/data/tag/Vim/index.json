{"hash":"8103612fff5ef0c89ce79e17d3acf7f030a00018","data":{"tag":{"title":"Vim","belongsTo":{"edges":[{"node":{"title":"我的Vim配置","path":"/2019/07/23/my-vim-configuration/","date":"23. July 2019","timeToRead":6,"description":"今天来分享一下我对于Vim的一下配置和心得","content":"<h2 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>前言</h2>\n<h4 id=\"为什么选择vim？\"><a href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9vim%EF%BC%9F\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>为什么选择vim？</h4>\n<p>曾经我也是一个小白，使用Dev-C++来学习C++语言，使用Visual Studio开发工程，它们都被称为IDE(Integrated development environment)。但是，逐渐的，我渐渐意识到，你只能遵循它制定的一系列的流程来开发程序，自定义程度不高，而且大型的IDE消耗计算资源严重。</p>\n<p>后来，我认识到了编辑和编译应该是一个分开的过程，便转战到了文本编辑器，选择Sublime Text。Sublime优秀的UI界面，优秀的快捷键，拥有插件系统，着实让我着迷。它的初始环境便可直接上手，它的默认配色Monokai让人看得很舒服。</p>\n<p>但是，离开Sublime选择Vim的原因有三点，一是Sublime依赖于图形化界面，二是Sublime移动光标需要移动右手使用方向键，三是Sublime编辑远程文件要么借助工具要么经常传输。至此，我终于理解了那个古老的梗。</p>\n<blockquote>\n<p> 世界上只有三种程序员，一种是使用Vim的，一种是使用Emacs的，还有一种是其他</p>\n</blockquote>\n<p>而这篇博文也是放置于效率分类下</p>\n<p><em>加个小彩蛋：</em>我实验室的Boss爱用Emacs，我们互视为异教徒，我说“你的手指会变形的”，他说“程序员谁的手指不变形”，我“......[冷漠]”</p>\n<h4 id=\"如何学习vim\"><a href=\"#%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0vim\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>如何学习Vim</h4>\n<p>我的观点是，自己一行一行写自己的配置文件才会深入学会Vim。如果一开始就用配置好的，那和直接使用IDE没有太大的差别。知道配置文件每一行干了些什么，不懂就搜，想加功能想改功能就动手，最后这就是一份<strong>你的配置文件</strong>。相信每个Vim大牛都是这样做的。同样的，我的Vim配置也会不断更新，可能会持续n年也不一定。而这也是为什么我的文章标题起名如此。</p>\n<h2 id=\"原则\"><a href=\"#%E5%8E%9F%E5%88%99\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>原则</h2>\n<p>我的Vim配置有一定的原则，遵循原则才会让配置不会超出自己的控制</p>\n<ol>\n<li>插件能用轻量级的就不用复杂的</li>\n<li>非需要的功能不会添加</li>\n<li>尽量消耗更少的资源</li>\n<li>配色一定不能忍</li>\n<li>尽可能的做到一键配置</li>\n</ol>\n<h2 id=\"正文\"><a href=\"#%E6%AD%A3%E6%96%87\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>正文</h2>\n<h4 id=\"配色\"><a href=\"#%E9%85%8D%E8%89%B2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>配色</h4>\n<p>说得多还不如先看看总体的配色，配色我采用了vim自带的desert主题，在这个基础上加了一点自定义</p>\n<p><img src=\"https://wsine.cn-gd.ufileos.com/image/wsine-blog-image494.png\" alt=\"配色图\"></p>\n<p>从左往右说起好了，左侧我添加了一个目录树，使用的是<code class=\"language-text\">scrooloose/nerdtree</code>的插件，并且绑定了<code class=\"language-text\">&lt;leader&gt;q</code>来启动和隐藏目录树，使用起来还是蛮方便的</p>\n<p>中间的配色我刻意挑了一个黑色的主题。我不喜欢那种惨淡的白色，函数名和命名空间是白色就和变量名看起来没有区分度了，因此搜了好久，找到了<code class=\"language-text\">octol/vim-cpp-enhanced-highlight</code>插件能满足这个需求，修改了一下它的颜色。弹出菜单的颜色我也自己修改了。颜色都采用了暗色调的color，确保不会刺眼，同时也能将不同的元素区分出来。<code class=\"language-text\">set t_Co=256 &quot; Enable status bar color</code>很重要。</p>\n<p>顶部和底部采用的是比较出名的<code class=\"language-text\">vim-airline/vim-airline</code>插件，以及其相应的<code class=\"language-text\">vim-airline/vim-airline-themes</code>，主题我选择了<code class=\"language-text\">let g:airline_theme=&#39;luna&#39;</code>，并且启用了powerline字体，也就是你能看到的三角形符号</p>\n<p>因为还在不断的修改中，未来可能会考虑把配色做成插件易于安装吧，目前的安装方式比较麻烦</p>\n<h4 id=\"管理\"><a href=\"#%E7%AE%A1%E7%90%86\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>管理</h4>\n<p>插件管理上我选用了Vundle，目前一款比较流行的Vim插件管理器，基本上我只使用github上的vim插件</p>\n<p><img src=\"https://wsine.cn-gd.ufileos.com/image/wsine-blog-image495.png\" alt=\"插件列表\"></p>\n<h4 id=\"按键\"><a href=\"#%E6%8C%89%E9%94%AE\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>按键</h4>\n<p>一直以来我对于那种秀配置不讲按键绑定的文章比较反感，除非你一个键都没改</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">模式</th>\n<th align=\"center\">按键</th>\n<th align=\"center\">映射</th>\n<th>功能</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">全局</td>\n<td align=\"center\"><code class=\"language-text\">,</code></td>\n<td align=\"center\"><code class=\"language-text\">leader</code></td>\n<td><code class=\"language-text\">&lt;leader&gt;</code></td>\n<td>leader键是vim中的一个特殊键</td>\n</tr>\n<tr>\n<td align=\"center\">正常</td>\n<td align=\"center\"><code class=\"language-text\">j</code></td>\n<td align=\"center\"><code class=\"language-text\">gj</code></td>\n<td>下一行</td>\n<td>视觉上往下移动(行太长导致分行时)</td>\n</tr>\n<tr>\n<td align=\"center\">正常</td>\n<td align=\"center\"><code class=\"language-text\">k</code></td>\n<td align=\"center\"><code class=\"language-text\">gk</code></td>\n<td>上一行</td>\n<td>视觉上往上移动(行太长导致分行时)</td>\n</tr>\n<tr>\n<td align=\"center\">正常</td>\n<td align=\"center\"><code class=\"language-text\">&lt;leader&gt;w</code></td>\n<td align=\"center\"><code class=\"language-text\">:w&lt;CR&gt;</code></td>\n<td>快速保存</td>\n<td>没有权限保存的时候也是不行的</td>\n</tr>\n<tr>\n<td align=\"center\">正常</td>\n<td align=\"center\"><code class=\"language-text\">&lt;leader&gt;q</code></td>\n<td align=\"center\"><code class=\"language-text\">:bd&lt;CR&gt;:q&lt;CR&gt;</code></td>\n<td>快速退出</td>\n<td>前提所有buffer都保存了，防止意外</td>\n</tr>\n<tr>\n<td align=\"center\">正常</td>\n<td align=\"center\"><code class=\"language-text\">K</code></td>\n<td align=\"center\"><code class=\"language-text\">:bnext&lt;CR&gt;</code></td>\n<td>切换到右边的buffer</td>\n<td>仿照Vimuim的标签切换</td>\n</tr>\n<tr>\n<td align=\"center\">正常</td>\n<td align=\"center\"><code class=\"language-text\">J</code></td>\n<td align=\"center\"><code class=\"language-text\">:bprevious&lt;CR&gt;</code></td>\n<td>切换到左边的buffer</td>\n<td>仿照Vimuim的标签切换</td>\n</tr>\n<tr>\n<td align=\"center\">正常</td>\n<td align=\"center\"><code class=\"language-text\">&lt;leader&gt;bn</code></td>\n<td align=\"center\"><code class=\"language-text\">:enew&lt;CR&gt;</code></td>\n<td>新开一个buffer</td>\n<td>buffer new</td>\n</tr>\n<tr>\n<td align=\"center\">正常</td>\n<td align=\"center\"><code class=\"language-text\">&lt;leader&gt;bd</code></td>\n<td align=\"center\"><code class=\"language-text\">:bd&lt;CR&gt;</code></td>\n<td>关闭当前buffer</td>\n<td>buffer delete</td>\n</tr>\n<tr>\n<td align=\"center\">正常</td>\n<td align=\"center\"><code class=\"language-text\">空格键</code></td>\n<td align=\"center\"><code class=\"language-text\">smooth_scroll</code></td>\n<td>向下平滑滚动</td>\n<td>避免思维跳跃，仿照Chrome的设定</td>\n</tr>\n<tr>\n<td align=\"center\">正常</td>\n<td align=\"center\"><code class=\"language-text\">减号键</code></td>\n<td align=\"center\"><code class=\"language-text\">smooth_scroll</code></td>\n<td>向上平滑滚动</td>\n<td>避免思维跳跃</td>\n</tr>\n<tr>\n<td align=\"center\">编辑</td>\n<td align=\"center\"><code class=\"language-text\">Ctrl + b</code></td>\n<td align=\"center\"><code class=\"language-text\">方向键-左</code></td>\n<td>向左移动一个字符</td>\n<td>仿照Bash的控制方式</td>\n</tr>\n<tr>\n<td align=\"center\">编辑</td>\n<td align=\"center\"><code class=\"language-text\">Ctrl + f</code></td>\n<td align=\"center\"><code class=\"language-text\">方向键-右</code></td>\n<td>向右移动一个字符</td>\n<td>仿照Bash的控制方式</td>\n</tr>\n<tr>\n<td align=\"center\">编辑</td>\n<td align=\"center\"><code class=\"language-text\">Ctrl + e</code></td>\n<td align=\"center\"><code class=\"language-text\">Home键</code></td>\n<td>跳到行首</td>\n<td>仿照Bash的控制方式</td>\n</tr>\n<tr>\n<td align=\"center\">编辑</td>\n<td align=\"center\"><code class=\"language-text\">Ctrl + a</code></td>\n<td align=\"center\"><code class=\"language-text\">End键</code></td>\n<td>跳到行尾</td>\n<td>仿照Bash的控制方式</td>\n</tr>\n<tr>\n<td align=\"center\">编辑</td>\n<td align=\"center\"><code class=\"language-text\">Tab键</code></td>\n<td align=\"center\"><code class=\"language-text\">方向键-下</code></td>\n<td>选择下一个候选词</td>\n<td>可连续按</td>\n</tr>\n<tr>\n<td align=\"center\">编辑</td>\n<td align=\"center\"><code class=\"language-text\">Esc键</code></td>\n<td align=\"center\"><code class=\"language-text\">Ctrl + 回车</code></td>\n<td>清除菜单</td>\n<td>无</td>\n</tr>\n<tr>\n<td align=\"center\">可视化</td>\n<td align=\"center\"><code class=\"language-text\">//</code></td>\n<td align=\"center\"><code class=\"language-text\">y/&lt;C-R&gt;&quot;&lt;CR&gt;</code></td>\n<td>快速搜索</td>\n<td>需要先选择内容</td>\n</tr>\n</tbody>\n</table>\n<p>其实可以看出我是比较喜欢统一各大软件的按键方式的，主要是可以让自己不用记忆太多，快捷键是效率的主要生产力，所以终端、编辑器、浏览器这三大离不开的软件，我都会尽可能地去统一它们的按键</p>\n<p>上面提到的平滑滚动我使用了<code class=\"language-text\">lucasicf/vim-smooth-scroll</code>的插件，其实这个插件来自出名的<code class=\"language-text\">terryma</code>之手，但是如果连续平滑滚动，会连续触发导致控制卡死。而<code class=\"language-text\">lucasicf</code>修复了这个bug并发送了PR，不知道为什么<code class=\"language-text\">terryma</code>大神一直没有理=。=</p>\n<p>还有，我想要仿照Chrome使用Shift + 空格键来平滑向上滚动，然后我尝试了很多种方法，并不能捕获<code class=\"language-text\">Shift + Space</code>的状态，如果有大神能做到求教</p>\n<h4 id=\"括号匹配\"><a href=\"#%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>括号匹配</h4>\n<p>Vim毕竟是写代码的利器，自动补全括号特别实用且重要，这里我简单的使用了一个插件<code class=\"language-text\">jiangmiao/auto-pairs</code></p>\n<h4 id=\"多光标编辑\"><a href=\"#%E5%A4%9A%E5%85%89%E6%A0%87%E7%BC%96%E8%BE%91\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>多光标编辑</h4>\n<p>在Sublime中唯一让我留念的就是多光标编辑了，作为被这个装逼大法宠坏的我，没有它感觉断了一臂。多亏了terryma大神将这一功能移植到了vim中，据说，这还是大神在一次航班途中写出来的，我只能打出666并默默地比了一个❤~</p>\n<p>插件名称<code class=\"language-text\">terryma/vim-multiple-cursors</code>。在Visual模式下选中所需要改的内容，按Ctrl + n可以选中下一个，然后按下c进入编辑状态，编辑完，Esc，完美</p>\n<h4 id=\"快速打开文件\"><a href=\"#%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>快速打开文件</h4>\n<p>Sublime还有一个功能是Ctrl + p可以打开文件，这一方式同样也有插件在vim中<code class=\"language-text\">ctrlpvim/ctrlp.vim</code>。更重要的是，该插件同样支持模糊搜索。</p>\n<h4 id=\"快速注释\"><a href=\"#%E5%BF%AB%E9%80%9F%E6%B3%A8%E9%87%8A\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>快速注释</h4>\n<p><code class=\"language-text\">scrooloose/nerdcommenter</code>是一个优秀的插件，默认的注释方式是<code class=\"language-text\">&lt;leader&gt;c&lt;Space&gt;</code>，可以在注释和非注释直接切换。同时，配合Ctrl + v的块选择，能够快速选中自己想要注释的行，然后<code class=\"language-text\">&lt;leader&gt;c&lt;Space&gt;</code>快速批量注释</p>\n<h4 id=\"自动补全\"><a href=\"#%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>自动补全</h4>\n<p>在自动补全的领域下，最好的无疑是<code class=\"language-text\">YouCompleteMe</code>插件了，然而我并没有使用。首先该插件的调用程序太多，消耗资源太多，安装也麻烦，一次安装终身受用这种借口不能作为不简化安装的理由。其次，语义化补全对我来说没有太大的需求，只需要能把变量和函数提示并补全就好了</p>\n<p>而Vim在新版中已经原生添加了自动补全的功能。利用按下Ctrl + x, Ctrl + o触发， Ctrl + n, Ctrl + p选择菜单。但是这样未免太麻烦不优雅，我利用了一款插件<code class=\"language-text\">vim-scripts/AutoComplPop</code>，它能够自动弹出补全菜单，使用起来效果还不错。不过它偶尔有一些小bug，我自己还能忍，如果你不喜欢再寻求一款更好的自动补全吧</p>\n<h4 id=\"格式控制\"><a href=\"#%E6%A0%BC%E5%BC%8F%E6%8E%A7%E5%88%B6\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>格式控制</h4>\n<p>在格式控制的范畴下，我将制表符都转义成了空格，并且在保存的时候自动把行尾的空格都去掉了，这是符合优秀编码规范的格式，希望还是能保持。</p>\n<p>有一点，很多人没注意到的，Git管理的文件建议保留文件末尾的一个空行，特意提一下，我没有加入到vim自动添加空行，因为不是所有的文件都被Git管理，无端的空行可能会导致一些未知的错误。所有建议手动添加。</p>\n<h4 id=\"其他\"><a href=\"#%E5%85%B6%E4%BB%96\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>其他</h4>\n<p>假设你都理解了vim的基础操作，其他的一些配置我也有相应的注释，参考了<a href=\"http://amix.dk/vim/vimrc.html%EF%BC%8C%E4%B8%8D%E6%84%A7%E6%98%AF%E8%A2%AB%E8%AA%89%E4%B8%BA%E6%95%99%E7%A7%91%E4%B9%A6%E8%88%AC%E7%9A%84vim%E9%85%8D%E7%BD%AE%EF%BC%8C%E7%9C%9F%E6%98%AF%E4%BC%98%E7%A7%80%E3%80%82\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://amix.dk/vim/vimrc.html，不愧是被誉为教科书般的vim配置，真是优秀。</a></p>\n<p>阅读.vimrc文件，能开拓你很多的思路，希望能找到你喜欢的</p>\n<h2 id=\"安装\"><a href=\"#%E5%AE%89%E8%A3%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>安装</h2>\n<p>参照<a href=\"https://github.com/VundleVim/Vundle.vim%EF%BC%8C%E4%B8%8B%E8%BD%BDVundle%E7%AE%A1%E7%90%86%E5%99%A8%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9B%AE%E5%BD%95\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/VundleVim/Vundle.vim，下载Vundle管理器到指定目录</a></p>\n<p>将对应的文件放置在你的家目录<code class=\"language-text\">~</code>下</p>\n<pre class=\"language-text\"><code class=\"language-text\">~\n├── .vimrc\n└── .vim\n     ├── bundle\n     │   └── Vundle.vim\n     └── colors\n         └── desert.vim</code></pre>\n<p><a href=\"https://github.com/Wsine/Backup/blob/master/vim/.vimrc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">.vimrc文件下载</a>\n<a href=\"https://github.com/Wsine/Backup/blob/master/vim/desert.vim\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">desert.vim文件下载</a></p>\n<p>打开Vim，使用<code class=\"language-text\">:PluginInstall</code>即可</p>\n<h2 id=\"配置文件\"><a href=\"#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>配置文件</h2>\n<pre class=\"language-text\"><code class=\"language-text\">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; =&gt; Vundle\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\nset nocompatible              &quot; be iMproved, required\nfiletype off                  &quot; required\n\n&quot; set the runtime path to include Vundle and initialize\nset rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n\n&quot; let Vundle manage Vundle, required\nPlugin &#39;VundleVim/Vundle.vim&#39;\n\nPlugin &#39;jiangmiao/auto-pairs&#39;\nPlugin &#39;scrooloose/nerdtree&#39;\nPlugin &#39;ctrlpvim/ctrlp.vim&#39;\n&quot; Plugin &#39;terryma/vim-smooth-scroll&#39;\nPlugin &#39;lucasicf/vim-smooth-scroll&#39;\nPlugin &#39;vim-scripts/AutoComplPop&#39;\nPlugin &#39;terryma/vim-multiple-cursors&#39;\nPlugin &#39;scrooloose/nerdcommenter&#39;\nPlugin &#39;vim-airline/vim-airline&#39;\nPlugin &#39;vim-airline/vim-airline-themes&#39;\nPlugin &#39;octol/vim-cpp-enhanced-highlight&#39;\nPlugin &#39;vim-python/python-syntax&#39;\n&quot; All of your Plugins must be added before the following line\ncall vundle#end()            &quot; required\nfiletype plugin indent on    &quot; required\n&quot; Put your non-Plugin stuff after this line\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; =&gt; General\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; Sets how many lines of history VIM has to remember\nset history=700\n\n&quot; Set to auto read when a file is changed from the outside\nset autoread\n\n&quot; ignore case when searching unless exists one upper case\nset ignorecase\nset smartcase\n\n&quot; Realtime searching\nset incsearch\n\n&quot; hight light searching\nset hlsearch\n\n&quot; No annoying sound on errors\nset noerrorbells\nset novisualbell\nset t_vb=\nset tm=500\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; =&gt; VIM user interface\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; Set 7 lines to the cursor - when moving vertically using j/k\nset so=7\n\n&quot; Turn on the WiLd menu\nset wildmenu\n\n&quot; Ignore compiled files\nset wildignore=*.o,*~,*.pyc\n\n&quot;Always show number\nset number\n\n&quot;Always show current position\nset ruler\n\n&quot; Height of the command bar\nset cmdheight=2\n\n&quot; A buffer becomes hidden when it is abandoned\nset hid\n\n&quot; Configure backspace so it acts as it should act\nset backspace=eol,start,indent\nset whichwrap+=&lt;,&gt;,h,l\n\n&quot; Set cmd show\nset showcmd\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; =&gt; Colors and Fonts\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; Enable syntax highlighting\nsyntax enable\n\n&quot; Set colorscheme\nset background=dark\ncolorscheme desert\n\n&quot; Set utf8 as standard encoding and en_US as the standard language\nset encoding=utf8\n\n&quot; Use Unix as the standard file type\nset ffs=unix,dos,mac\n\n&quot; Enable status bar color\nset t_Co=256\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; =&gt; Files, backups and undo\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; Turn backup off, since most stuff is in SVN, git et.c anyway...\nset nobackup\nset nowb\nset noswapfile\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; =&gt; Text, tab and indent related\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; Use spaces instead of tabs\nset expandtab\n\n&quot; Be smart when using tabs ;)\nset smarttab\n\n&quot; 1 tab == 4 spaces\nset shiftwidth=4\nset tabstop=4\n\n&quot; Linebreak on 500 characters\nset lbr\nset tw=500\n\n&quot; Intelligence indent\nset ai &quot;Auto indent\nset si &quot;Smart indent\nset wrap &quot;Wrap lines\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; =&gt; Moving around, tabs, windows and buffers\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; Return to last edit position when opening files (You want this!)\nautocmd BufReadPost *\n     \\ if line(&quot;&#39;\\&quot;&quot;) &gt; 0 &amp;&amp; line(&quot;&#39;\\&quot;&quot;) &lt;= line(&quot;$&quot;) |\n     \\   exe &quot;normal! g`\\&quot;&quot; |\n     \\ endif\n&quot; Remember info about open buffers on close\nset viminfo^=%\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; =&gt; Status line\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; Always show the status line\nset laststatus=2\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; =&gt; Editing mappings\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; With a map leader it&#39;s possible to do extra key combinations\n&quot; like &lt;leader&gt;w saves the current file\nlet mapleader = &quot;,&quot;\nlet g:mapleader = &quot;,&quot;\n\n&quot; Toggle paste mode\nset pastetoggle=&lt;leader&gt;p\n\n&quot; Treat long lines as break lines (useful when moving around in them)\nmap j gj\nmap k gk\n\n&quot; Fast saving\nnmap &lt;leader&gt;w :w&lt;CR&gt;\n\n&quot; Fast quit\nnmap &lt;leader&gt;q :bufdo bd&lt;CR&gt;:q&lt;CR&gt;\n\n&quot; Fast open file tree\nmap &lt;leader&gt;t :NERDTreeToggle&lt;CR&gt;\n\n&quot; Fast Tab use\nnoremap &lt;silent&gt; K :bnext&lt;CR&gt;\nnoremap &lt;silent&gt; J :bprevious&lt;CR&gt;\nnoremap &lt;silent&gt; &lt;leader&gt;bn :enew&lt;CR&gt;\nnoremap &lt;silent&gt; &lt;expr&gt; &lt;leader&gt;bd\n    \\ len(filter(range(1, bufnr(&#39;$&#39;)), &#39;buflisted(v:val)&#39;)) &gt;= 2 ?\n    \\ &quot;:bp\\|bd #&lt;CR&gt;&quot; : &quot;:bd&lt;CR&gt;&quot;\n\n&quot; Smooth page scroll\nnnoremap &lt;silent&gt; = :call smooth_scroll#down(&amp;scroll, 25, 2)&lt;CR&gt;\nnnoremap &lt;silent&gt; - :call smooth_scroll#up(&amp;scroll, 25, 2)&lt;CR&gt;\nnnoremap &lt;silent&gt; &lt;Space&gt; :call smooth_scroll#down(&amp;scroll, 25, 2)&lt;CR&gt;\n\n&quot; Move in insert mode\nimap &lt;C-b&gt; &lt;Left&gt;\nimap &lt;C-f&gt; &lt;Right&gt;\nimap &lt;C-e&gt; &lt;End&gt;\nimap &lt;C-a&gt; &lt;Home&gt;\nimap &lt;M-f&gt; &lt;C-o&gt;w\nimap &lt;M-b&gt; &lt;C-o&gt;b\n\n&quot; Clear highlight color\nnnoremap &lt;Esc&gt; :noh&lt;Return&gt;&lt;Esc&gt;\nnnoremap &lt;Esc&gt;^[ &lt;Esc&gt;^[\n\n&quot; Popup menu select\ninoremap &lt;silent&gt; &lt;expr&gt; &lt;Tab&gt; pumvisible() ? &quot;\\&lt;Down&gt;&quot; : &quot;\\&lt;Tab&gt;&quot;\ninoremap &lt;silent&gt; &lt;expr&gt; &lt;ESC&gt; pumvisible() ? &quot;\\&lt;C-E&gt;&quot; : &quot;\\&lt;ESC&gt;&quot;\n\n&quot; Visual Mode Search\nvnoremap // y/&lt;C-R&gt;&quot;&lt;CR&gt;\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; =&gt; Function, Command\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; Delete trailing white space on save, useful for Python and CoffeeScript ;)\nfunc! DeleteTrailingWS()\n    exe &quot;normal mz&quot;\n    %s/\\s\\+$//ge\n    exe &quot;normal `z&quot;\nendfunc\nautocmd BufWrite * :call DeleteTrailingWS()\n\n&quot; Auto open file tree if enter a directory\nautocmd StdinReadPre * let s:std_in=1\nautocmd VimEnter * if argc() == 1 &amp;&amp; isdirectory(argv()[0]) &amp;&amp; !exists(&quot;s:std_in&quot;) | exe &#39;NERDTree&#39; argv()[0] | wincmd p | ene | endif\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; =&gt; Plugin Setting\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; NERDcommenter\nlet g:NERDSpaceDelims=1\nlet g:NERDCommentEmptyLines=1\nlet g:NERDDefaultAlign=&#39;left&#39;\n\n&quot; Vim Airline themes\nlet g:airline_theme=&#39;luna&#39;\nlet g:airline_powerline_fonts=1\nlet g:airline#extensions#tabline#enabled=1\n\n&quot; Vim Cpp Highlight\nlet g:cpp_class_scope_highlight=1\nlet g:cpp_member_variable_highlight=1\nlet g:cpp_experimental_simple_template_highlight=1\nlet g:cpp_concepts_highlight=1\n\n&quot; Vim Python Highlight\nlet python_highlight_all=1</code></pre>\n"}}]}}},"context":{}}